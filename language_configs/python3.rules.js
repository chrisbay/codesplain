// Configuration for each possible node type.
// Currently, the only option is 'collapse', which is used by the collapse transformer.

module.exports = {
    // Non-terminals:
    'single_input': {},
    'file_input': {},
    'eval_input': {},
    'decorator': {},
    'decorators': {'collapse': true},
    'decorated': {'collapse': true},
    'funcdef': {},
    'parameters': {},
    'typedargslist': {},
    'tfpdef': {},
    'varargslist': {},
    'vfpdef': {'collapse': true},
    'stmt': {'collapse': true},
    'simple_stmt': {},
    'small_stmt': {'collapse': true},
    'expr_stmt': {'collapse': true},
    'testlist_star_expr': {'collapse': true},
    'augassign': {},
    'del_stmt': {},
    'pass_stmt': {},
    'flow_stmt': {'collapse': true},
    'break_stmt': {},
    'continue_stmt': {},
    'return_stmt': {},
    'yield_stmt': {},
    'raise_stmt': {},
    'import_stmt': {'collapse': true},
    'import_name': {},
    'import_from': {},
    'import_as_name': {},
    'dotted_as_name': {'collapse': true},
    'import_as_names': {'collapse': true},
    'dotted_as_names': {'collapse': true},
    'dotted_name': {'collapse': true},
    'global_stmt': {},
    'nonlocal_stmt': {},
    'assert_stmt': {},
    'compound_stmt': {'collapse': true},
    'if_stmt': {},
    'while_stmt': {},
    'for_stmt': {},
    'try_stmt': {},
    'with_stmt': {},
    'with_item': {},
    'except_clause': {},
    'suite': {'collapse': true},
    'test': {'collapse': true},
    'test_nocond': {'collapse': true},
    'lambdef': {},
    'lambdef_nocond': {},
    'or_test': {'collapse': true},
    'and_test': {'collapse': true},
    'not_test': {'collapse': true},
    'comparison': {'collapse': true},
    'comp_op': {},
    'star_expr': {'collapse': true},
    'expr': {},
    'xor_expr': {'collapse': true},
    'and_expr': {'collapse': true},
    'shift_expr': {'collapse': true},
    'arith_expr': {'collapse': true},
    'term': {'collapse': true},
    'factor': {'collapse': true},
    'power': {'collapse': true},
    'trailed_atom': {'collapse': true},
    'atom': {},
    'testlist_comp': {},
    'trailer': {},
    'subscriptlist': {'collapse': true},
    'subscript': {'collapse': true},
    'sliceop': {},
    'exprlist': {'collapse': true},
    'testlist': {'collapse': true},
    'dictorsetmaker': {},
    'classdef': {},
    'arglist': {},
    'argument': {},
    'comp_iter': {'collapse': true},
    'comp_for': {},
    'comp_if': {},
    'yield_expr': {},
    'yield_arg': {'collapse': true},
    'str': {},
    'number': {'collapse': true},
    'integer': {},

    // Terminals:
    '._EPSILON': {},
    '._EOF': {},
    '._INVALID': {},
    '.DEF': {},
    '.RETURN': {},
    '.RAISE': {},
    '.FROM': {},
    '.IMPORT': {},
    '.AS': {},
    '.GLOBAL': {},
    '.NONLOCAL': {},
    '.ASSERT': {},
    '.IF': {},
    '.ELIF': {},
    '.ELSE': {},
    '.WHILE': {},
    '.FOR': {},
    '.IN': {},
    '.TRY': {},
    '.FINALLY': {},
    '.WITH': {},
    '.EXCEPT': {},
    '.LAMBDA': {},
    '.OR': {},
    '.AND': {},
    '.NOT': {},
    '.IS': {},
    '.NONE': {},
    '.TRUE': {},
    '.FALSE': {},
    '.CLASS': {},
    '.YIELD': {},
    '.DEL': {},
    '.PASS': {},
    '.CONTINUE': {},
    '.BREAK': {},
    '.NEWLINE': {},
    '.NAME': {},
    '.STRING_LITERAL': {},
    '.BYTES_LITERAL': {},
    '.DECIMAL_INTEGER': {},
    '.OCT_INTEGER': {},
    '.HEX_INTEGER': {},
    '.BIN_INTEGER': {},
    '.FLOAT_NUMBER': {},
    '.IMAG_NUMBER': {},
    '.DOT': {},
    '.ELLIPSIS': {},
    '.STAR': {},
    '.OPEN_PAREN': {},
    '.CLOSE_PAREN': {},
    '.COMMA': {},
    '.COLON': {},
    '.SEMI_COLON': {},
    '.POWER': {},
    '.ASSIGN': {},
    '.OPEN_BRACK': {},
    '.CLOSE_BRACK': {},
    '.OR_OP': {},
    '.XOR': {},
    '.AND_OP': {},
    '.LEFT_SHIFT': {},
    '.RIGHT_SHIFT': {},
    '.ADD': {},
    '.MINUS': {},
    '.DIV': {},
    '.MOD': {},
    '.IDIV': {},
    '.NOT_OP': {},
    '.OPEN_BRACE': {},
    '.CLOSE_BRACE': {},
    '.LESS_THAN': {},
    '.GREATER_THAN': {},
    '.EQUALS': {},
    '.GT_EQ': {},
    '.LT_EQ': {},
    '.NOT_EQ_1': {},
    '.NOT_EQ_2': {},
    '.AT': {},
    '.ARROW': {},
    '.ADD_ASSIGN': {},
    '.SUB_ASSIGN': {},
    '.MULT_ASSIGN': {},
    '.AT_ASSIGN': {},
    '.DIV_ASSIGN': {},
    '.MOD_ASSIGN': {},
    '.AND_ASSIGN': {},
    '.OR_ASSIGN': {},
    '.XOR_ASSIGN': {},
    '.LEFT_SHIFT_ASSIGN': {},
    '.RIGHT_SHIFT_ASSIGN': {},
    '.POWER_ASSIGN': {},
    '.IDIV_ASSIGN': {},
    '.SKIP_': {},
    '.UNKNOWN_CHAR': {},
    '.INDENT': {},
    '.DEDENT': {},
};
