const { TerminalNode } = require('antlr4ts/tree/TerminalNode.js');
// BLABLA
module.exports = function(lang_runtime_config, root) {

  // Takes an antlr node generated by the antlr parser, and
  // outputs our simplified node.

  const { symbol_name_map, rule_name_map } = lang_runtime_config;

  const simplify_node = function(node) {
    if (node instanceof TerminalNode) {
      const { type, start, stop, text } = node.symbol;
      return {
        'type':     symbol_name_map[type + 2],
        'begin':    start,
        'end':      stop + 1,
        'tags':     [],
        'children': [],
        'text':     text,
      };
    } else {
      const { ruleIndex, start, stop, children } = node;
      return {
        'type':     rule_name_map[ruleIndex],
        'begin':    start.start,
        'end':      (stop ? stop : start).stop + 1,
        'tags':     [],
        'children': children ? children.map(simplify_node) : [],
      };
    }
  };

  return simplify_node(root);
};
